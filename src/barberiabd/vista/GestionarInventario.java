/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package barberiabd.vista;

import barberiabd.controlador.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JOptionPane;
import barberiabd.vista.InformeBarberos;
import javax.swing.JTextField;

/**
 *
 * @author Andrea Calderon
 */
public class GestionarInventario extends javax.swing.JFrame {

    int id_barberoGestion = InformeBarberos.id_barbero;
    String direccion;

    public GestionarInventario() {
        initComponents();
        setSize(400, 320);
        setResizable(false);
        setTitle("Gestionar Inventarios");
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.decode("#dbdccd"));

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/LogoP.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        actualizar_btn = new javax.swing.JButton();
        salir_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idProducto_TF = new javax.swing.JTextField();
        idProveedor_TF = new javax.swing.JTextField();
        cantidad_TF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tipoMov_cmb = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel1.setText("IdProducto:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        actualizar_btn.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        actualizar_btn.setText("Ingresar Movimiento");
        actualizar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizar_btnActionPerformed(evt);
            }
        });
        getContentPane().add(actualizar_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        salir_btn.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        salir_btn.setText("Salir");
        salir_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_btnActionPerformed(evt);
            }
        });
        getContentPane().add(salir_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));

        jLabel2.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel2.setText("IdProveedor:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel3.setText("Tipo de movimiento:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));
        getContentPane().add(idProducto_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 100, -1));
        getContentPane().add(idProveedor_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 100, -1));
        getContentPane().add(cantidad_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 100, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/barber.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 70, 70));

        tipoMov_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrada", "Salida" }));
        tipoMov_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoMov_cmbActionPerformed(evt);
            }
        });
        getContentPane().add(tipoMov_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 100, -1));

        jLabel7.setFont(new java.awt.Font("Leelawadee", 0, 14)); // NOI18N
        jLabel7.setText("Cantidad:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salir_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_btnActionPerformed
        dispose();
        Administrador retorno = new Administrador();
        retorno.setVisible(true);
    }//GEN-LAST:event_salir_btnActionPerformed

    private void actualizar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizar_btnActionPerformed
        int idProducto = 0, idProveedor = 0, cantidad = 0, cantidadInventario, cantidadTotal;
        boolean ocurreError;

        ocurreError = false;
        if (estaVacio(idProducto_TF) || noEsNumero(idProducto_TF.getText())) {
            mensajeError("Ingrese el id del producto, recuerde que debe ser un número");
            ocurreError = true;
        } else {
            idProducto = Integer.parseInt(idProducto_TF.getText());
            if (!encuentraId("producto", "codigo", idProducto)) {
                mensajeError("El id del producto no existe");
                ocurreError = true;
            }
        }

        if (estaVacio(idProveedor_TF) || noEsNumero(idProveedor_TF.getText())) {
            mensajeError("Ingrese el id del proveedor, recuerde que debe ser un número");
            ocurreError = true;
        } else {
            idProveedor = Integer.parseInt(idProveedor_TF.getText());
            if (!encuentraId("proveedor", "id", idProveedor)) {
                mensajeError("El id del proveedor no existe");
                ocurreError = true;
            }
        }

        if (estaVacio(cantidad_TF) || noEsNumero(cantidad_TF.getText())) {
            mensajeError("Ingrese la cantidad, recuerde que debe ser un número");
            ocurreError = true;
        } else {
            cantidad = Integer.parseInt(cantidad_TF.getText());
        }

        if (!ocurreError) {
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select codigoProducto, codigoProveedor, cantidad from inventario where codigoProducto = '" + idProducto + "'");
                ResultSet rs2 = pst2.executeQuery();
                if (rs2.next()) {
                    cantidadInventario = Integer.parseInt(rs2.getString("cantidad"));
                    if (tipoMov_cmb.getSelectedIndex() == 1) {
                        cantidadTotal = cantidadInventario - cantidad;
                    } else {cantidadTotal = cantidadInventario + cantidad;}
                    
                    if (cantidadTotal >= 0) {
                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("UPDATE inventario SET codigoProducto = ?, codigoProveedor = ?, cantidad =? where codigoProducto = '" + idProducto + "'");

                            pst.setInt(1, idProducto);
                            pst.setInt(2, idProveedor);
                            pst.setInt(3, cantidadTotal);

                            pst.executeUpdate();
                            cn.close();
                            JOptionPane.showMessageDialog(null, "El movimiento de inventario registro correctamente ");
                            idProducto_TF.setText("");
                            idProveedor_TF.setText("");
                            cantidad_TF.setText("");
                        } catch (SQLException e) {
                            System.err.print("Error en actualizar inventario1" + e);
                            JOptionPane.showMessageDialog(null, "Error al actualizar el inventario, contacte al desarrollador");
                        }
                        cn2.close();
                    } else {
                        JOptionPane.showMessageDialog(null, "La cantidad en el inventario debe ser mayor o igual a 0 ");
                    }

                } else if (cantidad > 0) {
                    try {
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement("INSERT INTO inventario VALUES (?,?,?)");

                        pst.setInt(1, idProducto);
                        pst.setInt(2, idProveedor);
                        pst.setInt(3, cantidad);

                        pst.executeUpdate();
                        cn.close();
                        JOptionPane.showMessageDialog(null, "El movimiento de inventario registro correctamente ");
                        idProducto_TF.setText("");
                        idProveedor_TF.setText("");
                        cantidad_TF.setText("");
                    } catch (SQLException e) {
                        System.err.print("Error en actualizar inventario" + e);
                        JOptionPane.showMessageDialog(null, "Error al actualizar el inventario, contacte al desarrollador");
                    }
                    cn2.close();

                } else {
                    JOptionPane.showMessageDialog(null, "La cantidad ingresada debe ser mayor o igual a 0 ");
                }
            } catch (SQLException e) {
                System.err.print("Error en actualizar inventario" + e);
                JOptionPane.showMessageDialog(null, "Error al actualizar el inventario, contacte al desarrollador");
            }
        }
    }

    private static boolean noEsNumero(String cadena) {
        try {
            Integer.parseInt(cadena);
            return false;
        } catch (NumberFormatException nfe) {
            return true;
        }
    }

    private static boolean estaVacio(JTextField TF) {
        if (TF.getText().length() == 0) {
            return true;
        } else {
            return false;
        }
    }

    private static void mensajeError(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje);
    }

    private static boolean encuentraId(String tabla, String nombreId, int id) {
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select " + nombreId + " from " + tabla + " where " + nombreId + " = '" + id
                    + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return true;

            } else {
                return false;
            }
        } catch (SQLException e) {
            return false;
        }


    }//GEN-LAST:event_actualizar_btnActionPerformed

    private void tipoMov_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoMov_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoMov_cmbActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar_btn;
    private javax.swing.JTextField cantidad_TF;
    private javax.swing.JTextField idProducto_TF;
    private javax.swing.JTextField idProveedor_TF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton salir_btn;
    private javax.swing.JComboBox<String> tipoMov_cmb;
    // End of variables declaration//GEN-END:variables

    private static boolean isNumerico(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

}
